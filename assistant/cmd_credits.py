import random
from aiogram import types
from .telegram import dp
from .i_can_break import sorry_if_exception


FEEDBACK_URL = "https://3qugszanpzk.typeform.com/to/ifCEiciG"
GITHUB_URL = "https://github.com/vgalilei/ai_chat_mate"
CREDITS_PROBABILITY = 0.01


async def maybe_send_credits(message: types.Message, *args, **kwargs):
    if message.chat.type != 'private' or random.random() > CREDITS_PROBABILITY:
        return
    await send_credits(message)


@dp.message_handler(commands=["credits"])
@sorry_if_exception()
async def send_credits(message: types.Message, *args, **kwargs):
    answer = msg_credits.get(
        message.from_user.language_code,
        msg_credits['en']
    )
    await message.answer(**answer)


msg_credits = {
    "en": {
        "parse_mode": "MarkdownV2",
        "text": "This bot is developed by @galilei\. "
                "You are more than welcome to reach out with a suggestion or complain\."
                "\n\nYour conversation is safe \- "
                "bot never stores any of your messages without your explicit permission\. "
                "The code is open\. Feel free to review the GitHub page\. "
                "\n\nIf this bot is useful for you it will be useful for your friends\. "
                "\n*Please don't hesitate to share it*",
        "reply_markup": types.InlineKeyboardMarkup(
            inline_keyboard=[
                [
                    types.InlineKeyboardButton("üîó Source code", url=GITHUB_URL),
                    types.InlineKeyboardButton("üí¨ Leave feedback", url=FEEDBACK_URL)
                ]
            ])
    },
    "ru": {
        "parse_mode": "MarkdownV2",
        "text": "¬´–≠—Ç–æ—Ç –±–æ—Ç —Ä–∞–∑—Ä–∞–±–æ—Ç–∞–Ω @galilei\. "
                "–í—ã –≤—Å–µ–≥–¥–∞ –º–æ–∂–µ—Ç–µ –æ–±—Ä–∞—Ç–∏—Ç—å—Å—è —Å –ø—Ä–µ–¥–ª–æ–∂–µ–Ω–∏–µ–º –∏–ª–∏ –∂–∞–ª–æ–±–æ–π\. "
                "\n\n–í–∞—à —Ä–∞–∑–≥–æ–≤–æ—Ä –≤ –±–µ–∑–æ–ø–∞—Å–Ω–æ—Å—Ç–∏ \‚Äî "
                "–±–æ—Ç –Ω–∏–∫–æ–≥–¥–∞ –Ω–µ —Å–æ—Ö—Ä–∞–Ω—è–µ—Ç –≤–∞—à–∏ —Å–æ–æ–±—â–µ–Ω–∏—è –±–µ–∑ –≤–∞—à–µ–≥–æ —è–≤–Ω–æ–≥–æ —Ä–∞–∑—Ä–µ—à–µ–Ω–∏—è\. "
                "–ö–æ–¥ –æ—Ç–∫—Ä—ã—Ç\. –ü–æ—Å–µ—Ç–∏—Ç–µ —Å—Ç—Ä–∞–Ω–∏—Ü—É –ø—Ä–æ–µ–∫—Ç–∞ –Ω–∞ GitHub"
                "\n\n–ï—Å–ª–∏ —ç—Ç–æ—Ç –±–æ—Ç –ø–æ–ª–µ–∑–µ–Ω –¥–ª—è –≤–∞—Å\, –æ–Ω –±—É–¥–µ—Ç –ø–æ–ª–µ–∑–µ–Ω –∏ –¥–ª—è –≤–∞—à–∏—Ö –¥—Ä—É–∑–µ–π\. "
                "–ü–æ–∂–∞–ª—É–π—Å—Ç–∞\, –Ω–µ —Å—Ç–µ—Å–Ω—è–π—Ç–µ—Å—å –ø–æ–¥–µ–ª–∏—Ç—å—Å—è –∏–º c –¥—Ä—É–∑—å—è–º–∏ –∏ –∫–æ–ª–ª–µ–≥–∞–º–∏",
        "reply_markup": types.InlineKeyboardMarkup(
            inline_keyboard=[
                [
                    types.InlineKeyboardButton("üîó –ò—Å—Ö–æ–¥–Ω—ã–π –∫–æ–¥", url=GITHUB_URL),
                    types.InlineKeyboardButton("üí¨ –ü–æ–¥–µ–ª–∏—Ç—å—Å—è –∏–¥–µ–µ–π", url=FEEDBACK_URL)
                ]
            ])
    }
}
